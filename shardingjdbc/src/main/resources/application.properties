server.port=8000
#==================================shardingsphere 配置开始========数据分片======================================
spring.shardingsphere.datasource.names=ds0
# 配置数据源
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://127.0.0.1:3306/test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456
spring.main.allow-bean-definition-overriding=true
# #shardingjdbc解析上下文和改写后的SQL
spring.shardingsphere.props.sql.show=true
#未配置分片规则的表将通过默认数据源定位-适用于单库单表，该表无需配置分片规则
sharding.jdbc.config.sharding.defaultDataSourceName=ds0
#主键
spring.shardingsphere.sharding.tables.t_user.key-generator.column=id
#主键生成策略，用雪花算法
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE
# 根据order_id字段进行分片
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.sharding-column=time
# 精确分片算法。按单月分表,采用标准的分片策略，指向插入数据时的处理,自己实现的逻辑，每次插入和根据分片键查询数据的时候都会被调用
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.precise-algorithm-class-name=com.zz.shardingjdbc.config.TimeShardingTableAlgorithm
# 范围分片算法。根据分片键使用between and 的时候才会走，其他方式查询则没用
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.range-algorithm-class-name=com.zz.shardingjdbc.config.TimeRangeShardingAlgorithm